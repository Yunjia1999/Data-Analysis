-- 若每个字段内实际数据的最大长度为字段长度：
-- 创建一个临时表，用于存储字段名称、最大长度和字段类型
CREATE TEMPORARY TABLE temp_table
(
  column_name VARCHAR(255),
  max_length INT,
  data_type VARCHAR(255)
);
-- 向临时表中插入每个字段的名称、最大长度和字段类型
INSERT INTO temp_table (column_name, max_length, data_type)
SELECT 'ID', MAX(LENGTH(ID)), 'int' FROM CONTRACT
UNION ALL
SELECT 'SLT_ACCOUNT_ID', MAX(LENGTH(SLT_ACCOUNT_ID)), 'int' FROM CONTRACT
UNION ALL
SELECT 'AGREEMENT_ID', MAX(LENGTH(AGREEMENT_ID)), 'int' FROM CONTRACT
UNION ALL
SELECT 'LOAN_AMT', MAX(LENGTH(LOAN_AMT)), 'decimal' FROM CONTRACT
UNION ALL
SELECT 'LOAN_DATE', MAX(LENGTH(LOAN_DATE)), 'datetime' FROM CONTRACT
UNION ALL
SELECT 'VALID_TO_DT', MAX(LENGTH(VALID_TO_DT)), 'datetime' FROM CONTRACT
;
-- 查询临时表中的数据
SELECT column_name AS '字段名称', max_length AS '字段长度', data_type AS '字段类型'
FROM temp_table;
-- 删除临时表
DROP TEMPORARY TABLE temp_table;


-- 用information_schema.columns查询表格本身的字段长度：
SELECT
	column_name AS '字段名称',
	character_maximum_length AS '字段长度',
	numeric_precision AS '数值精度',
	datetime_precision AS '日期精度',
	data_type AS '字段类型'
FROM
	information_schema.columns
WHERE
	table_name = 'CONTRACT';



-- -- LEFT JOIN 显示所有表（无遗漏行）
-- SELECT
-- 	* 
-- FROM
-- 	CONTRACT
-- 	LEFT OUTER JOIN SLT ON CONTRACT.SLT_ACCOUNT_ID = SLT.ID
-- 	LEFT OUTER JOIN CREDIT ON SLT.CUSTOMER_ID = CREDIT.CUSTOMER_ID 
-- 	AND SLT.CREDIT_RECORD_ID = CREDIT.ID
-- 	LEFT OUTER JOIN CUSTOMER ON SLT.CUSTOMER_ID = CUSTOMER.ID
-- 	LEFT OUTER JOIN CHANNEL ON CUSTOMER.CHANNEL_ID = CHANNEL.ID;


-- 首贷首笔的放款成功人数、总放款金额、件均（放款金额/放款成功人数）
WITH filtered_customers AS (
	SELECT DISTINCT
		CREDIT.CUSTOMER_ID,
		CONTRACT.LOAN_AMT,
		DATE ( CONTRACT.LOAN_DATE ) AS LOAN_DATE 
	FROM
		CONTRACT
		JOIN SLT ON CONTRACT.SLT_ACCOUNT_ID = SLT.ID
		JOIN CREDIT ON SLT.CUSTOMER_ID = CREDIT.CUSTOMER_ID 
		AND SLT.CREDIT_RECORD_ID = CREDIT.ID 
	WHERE
		CREDIT.CREDIT_TYPE = 0 
		AND CREDIT.ENABLE_FLAG = 1 
		AND CONTRACT.LOAN_AMT > 0 
	) SELECT
	COUNT( DISTINCT CUSTOMER_ID ) AS '放款成功人数',
	SUM( LOAN_AMT ) AS '总放款金额',
	AVG( LOAN_AMT ) AS '件均' 
FROM
	filtered_customers;


-- 首贷首笔的放款成功客户、对应放款金额（按放款日期降序排列）
WITH filtered_customers AS (
	SELECT DISTINCT
		CREDIT.CUSTOMER_ID,
		CONTRACT.LOAN_AMT,
		DATE ( CONTRACT.LOAN_DATE ) AS LOAN_DATE 
	FROM
		CONTRACT
		JOIN SLT ON CONTRACT.SLT_ACCOUNT_ID = SLT.ID
		JOIN CREDIT ON SLT.CUSTOMER_ID = CREDIT.CUSTOMER_ID 
		AND SLT.CREDIT_RECORD_ID = CREDIT.ID 
	WHERE
		CREDIT.CREDIT_TYPE = 0 
		AND CREDIT.ENABLE_FLAG = 1 
		AND CONTRACT.LOAN_AMT > 0 
	) SELECT
	CUSTOMER_ID AS '放款客户ID',
	LOAN_AMT AS '放款金额',
	LOAN_DATE AS '放款日期' 
FROM
	filtered_customers 
ORDER BY
	LOAN_DATE DESC;



-- 每个渠道内每种额度类型的转化率
SELECT
	CHANNEL.CHANNEL_NAME AS '渠道类型',
	CREDIT.CYCLE_AMOUNT AS '授信额度类型',
	COUNT( DISTINCT CASE WHEN CREDIT.ENABLE_FLAG = 1 THEN SLT.CUSTOMER_ID END ) AS '授信通过人数',
	COUNT( DISTINCT CASE WHEN CONTRACT.LOAN_AMT > 0 THEN SLT.CUSTOMER_ID END ) AS '放款人数',
	1.0 * COUNT( DISTINCT CASE WHEN CONTRACT.LOAN_AMT > 0 THEN SLT.CUSTOMER_ID END )
	/ NULLIF( COUNT( DISTINCT CASE WHEN CREDIT.ENABLE_FLAG = 1 THEN SLT.CUSTOMER_ID END ), 0 ) AS '转化率（放款成功人数/授信通过人数）'
FROM
	CONTRACT
	LEFT JOIN SLT ON CONTRACT.SLT_ACCOUNT_ID = SLT.ID
	LEFT JOIN CREDIT ON SLT.CUSTOMER_ID = CREDIT.CUSTOMER_ID 
	AND SLT.CREDIT_RECORD_ID = CREDIT.ID
	LEFT JOIN CUSTOMER ON SLT.CUSTOMER_ID = CUSTOMER.ID
	LEFT JOIN CHANNEL ON CUSTOMER.CHANNEL_ID = CHANNEL.ID 
WHERE
	CREDIT.CYCLE_AMOUNT IN ( 3000, 5000, 8000, 10000, 20000 ) 
GROUP BY
	CHANNEL.CHANNEL_NAME,
	CREDIT.CYCLE_AMOUNT 
ORDER BY
	CHANNEL.CHANNEL_NAME,
	CREDIT.CYCLE_AMOUNT;
  
  
  
  
  
  
  
  
  
  
